---
apiVersion: v1
kind: Namespace
metadata:
  name: cups
  labels:
    name: cups

---
apiVersion: v1
kind: Secret
metadata:
  name: cups-admin-credentials
  namespace: cups
type: Opaque
stringData:
  # IMPORTANT: Change these values before deploying
  username: admin
  password: BigSecretCUPSP@ssw0rd123!

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cups-config
  namespace: cups
data:
  CUPS_LOG_LEVEL: "warn"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cups-pdf-output-pvc
  namespace: cups
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: longhorn
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: filebrowser-cups-database-pvc
  namespace: cups
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: filebrowser-cups-config-pvc
  namespace: cups
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cups-server
  namespace: cups
  labels:
    app: cups
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: cups
  template:
    metadata:
      labels:
        app: cups
    spec:
      securityContext:
        fsGroup: 0 # Set filesystem group ownership to root
        runAsNonRoot: false  # CUPS requires root privileges
      
      initContainers:
        - name: setup-filebrowser-dirs
          image: busybox:1.35
          command: ["sh", "-c"]
          args:
            - |
              echo "Creating filebrowser directory structure..."
              mkdir -p /srv/pdfs
              chmod 755 /srv /srv/pdfs
              echo "Setting up PDF output directory..."
              mkdir -p /var/spool/cups-pdf/ANONYMOUS
              chmod 1777 /var/spool/cups-pdf/ANONYMOUS
              echo "Directory structure ready"
          volumeMounts:
            - name: pdf-output
              mountPath: /srv/pdfs
      
      containers:
      - name: cups
        image: ghcr.io/shadowbq/docker-ubuntu-cups:latest
        imagePullPolicy: Always
        
        env:
        - name: CUPS_ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: cups-admin-credentials
              key: username
        - name: CUPS_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: cups-admin-credentials
              key: password
        - name: CUPS_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: cups-config
              key: CUPS_LOG_LEVEL
        
        ports:
        - name: cups
          containerPort: 631
          protocol: TCP
        - name: mdns
          containerPort: 5353
          protocol: UDP
        
        volumeMounts:
        - name: pdf-output
          mountPath: /var/spool/cups-pdf/ANONYMOUS
        
        livenessProbe:
          exec:
            command:
            - lpstat
            - "-r"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          exec:
            command:
            - lpstat
            - "-r"
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            - NET_ADMIN
            - NET_RAW
            - CHOWN
            - DAC_OVERRIDE
            - FOWNER
            drop: []
          privileged: false
          readOnlyRootFilesystem: false
          runAsUser: 0  # Run as root - required for CUPS and user management
      
      - name: filebrowser
        image: filebrowser/filebrowser:latest
        ports:
          - containerPort: 80
        args: ["-r", "/srv"]
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
              - CHOWN
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000 # Run as filebrowser user
          runAsGroup: 1000
        volumeMounts:
          - name: pdf-output
            mountPath: /srv/pdfs
          - name: filebrowser-cups-database
            mountPath: /database
          - name: filebrowser-cups-config
            mountPath: /config
      
      volumes:
      - name: pdf-output
        persistentVolumeClaim:
          claimName: cups-pdf-output-pvc
      - name: filebrowser-cups-database
        persistentVolumeClaim:
          claimName: filebrowser-cups-database-pvc
      - name: filebrowser-cups-config
        persistentVolumeClaim:
          claimName: filebrowser-cups-config-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: cups-service
  namespace: cups
  labels:
    app: cups
  annotations:
    # For Rancher/RKE2 with MetalLB or similar
    metallb.universe.tf/loadBalancer-IPs: "192.168.87.27"
    # Alternative for cloud providers:
    # service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
spec:
  selector:
    app: cups
  type: LoadBalancer
  externalTrafficPolicy: Local  # Preserve source IP for better mDNS
  ports:
  - name: cups
    port: 631
    targetPort: 631
    protocol: TCP
  - name: filebrowser
    port: 8080
    targetPort: 80
    protocol: TCP
  - name: mdns
    port: 5353
    targetPort: 5353
    protocol: UDP

